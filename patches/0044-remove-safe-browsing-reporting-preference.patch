From 42f92c183996295b105beb2449694097db3f0249 Mon Sep 17 00:00:00 2001
From: Daniel Micay <danielmicay@gmail.com>
Date: Fri, 2 Aug 2019 23:48:41 -0400
Subject: [PATCH 44/54] remove safe browsing reporting preference

---
 .../settings/sync/SyncAndServicesSettings.java       | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/settings/sync/SyncAndServicesSettings.java b/chrome/android/java/src/org/chromium/chrome/browser/settings/sync/SyncAndServicesSettings.java
index 4d74473a6f15..80d2a6be61b4 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/settings/sync/SyncAndServicesSettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/settings/sync/SyncAndServicesSettings.java
@@ -220,8 +220,10 @@ public class SyncAndServicesSettings extends PreferenceFragmentCompat
 
         mSafeBrowsingReporting =
                 (ChromeSwitchPreference) findPreference(PREF_SAFE_BROWSING_SCOUT_REPORTING);
-        mSafeBrowsingReporting.setOnPreferenceChangeListener(this);
-        mSafeBrowsingReporting.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
+        //mSafeBrowsingReporting.setOnPreferenceChangeListener(this);
+        //mSafeBrowsingReporting.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
+        removePreference(servicesCategory, mSafeBrowsingReporting);
+        mSafeBrowsingReporting = null;
 
         mUsageAndCrashReporting =
                 (ChromeSwitchPreference) findPreference(PREF_USAGE_AND_CRASH_REPORTING);
@@ -616,9 +618,9 @@ public class SyncAndServicesSettings extends PreferenceFragmentCompat
      */
     private void updateLeakDetectionAndSafeBrowsingReportingPreferences() {
         boolean safe_browsing_enabled = mPrefServiceBridge.getBoolean(Pref.SAFE_BROWSING_ENABLED);
-        mSafeBrowsingReporting.setEnabled(safe_browsing_enabled);
-        mSafeBrowsingReporting.setChecked(safe_browsing_enabled
-                && SafeBrowsingBridge.isSafeBrowsingExtendedReportingEnabled());
+        //mSafeBrowsingReporting.setEnabled(safe_browsing_enabled);
+        //mSafeBrowsingReporting.setChecked(safe_browsing_enabled
+                //&& SafeBrowsingBridge.isSafeBrowsingExtendedReportingEnabled());
 
         if (mPasswordLeakDetection == null) {
             return;
-- 
2.25.2

